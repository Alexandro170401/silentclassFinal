{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Proyecto_Alexandro\\\\Version hibrida (local-web)\\\\silent-class\\\\src\\\\components\\\\Examen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './Examen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Examen() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [preguntas, setPreguntas] = useState([]);\n  const [respuestas, setRespuestas] = useState({});\n  const [curso, setCurso] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchPreguntas();\n    fetchCurso();\n  }, [id]);\n  const fetchPreguntas = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/examen.php?cursoId=${id}`);\n      if (!response.ok) {\n        throw new Error('Error al obtener las preguntas del examen');\n      }\n      const data = await response.json();\n      setPreguntas(data.preguntas || []);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching exam questions:', error);\n      setError('Error al cargar las preguntas del examen');\n      setLoading(false);\n    }\n  };\n  const fetchCurso = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/courses.php?id=${id}`);\n      if (!response.ok) {\n        throw new Error('Error al obtener los detalles del curso');\n      }\n      const data = await response.json();\n      setCurso(data);\n    } catch (error) {\n      console.error('Error fetching course details:', error);\n      setError('Error al cargar los detalles del curso');\n    }\n  };\n  const handleOpcionChange = (preguntaId, opcionId) => {\n    setRespuestas({\n      ...respuestas,\n      [preguntaId]: opcionId + 1\n    });\n  };\n  const handleSubmit = async () => {\n    const usuarioId = localStorage.getItem('usuarioId');\n    if (!usuarioId) {\n      console.error('Usuario no identificado');\n      return;\n    }\n    const data = {\n      cursoId: id,\n      usuarioId,\n      respuestas,\n      fecha: new Date().toISOString()\n    };\n    console.log('Datos enviados al backend:', data);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/evaluarExamen.php`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        navigate(`/evaluacion/${result.evaluacionId}?nombreCurso=${encodeURIComponent(curso.nombre)}&especialidad=${encodeURIComponent(curso.especialidad)}`);\n      } else {\n        console.error('Error en la evaluación del examen');\n      }\n    } catch (error) {\n      console.error('Error en el envío del examen:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  if (!preguntas || preguntas.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay preguntas disponibles para este examen.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Examen del Curso \", curso && curso.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [preguntas.map((pregunta, indexPregunta) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pregunta\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pregunta.pregunta\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"opciones\",\n          children: pregunta.opciones.map((opcion, indexOpcion) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [opcion, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `pregunta-${indexPregunta}`,\n                value: indexOpcion + 1,\n                checked: respuestas[pregunta.id] === indexOpcion + 1,\n                onChange: () => handleOpcionChange(pregunta.id, indexOpcion)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)\n          }, indexOpcion, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, indexPregunta, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        className: \"submit-examen-button\",\n        children: \"Enviar Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Examen, \"rOXhNtEG52FryfYVKr+G7hXCq+I=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Examen;\nexport default Examen;\nvar _c;\n$RefreshReg$(_c, \"Examen\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","Examen","_s","id","preguntas","setPreguntas","respuestas","setRespuestas","curso","setCurso","loading","setLoading","error","setError","navigate","fetchPreguntas","fetchCurso","response","fetch","process","env","REACT_APP_API_URL","ok","Error","data","json","console","handleOpcionChange","preguntaId","opcionId","handleSubmit","usuarioId","localStorage","getItem","cursoId","fecha","Date","toISOString","log","method","headers","body","JSON","stringify","result","evaluacionId","encodeURIComponent","nombre","especialidad","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onSubmit","map","pregunta","indexPregunta","opciones","opcion","indexOpcion","type","name","value","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Proyecto_Alexandro/Version hibrida (local-web)/silent-class/src/components/Examen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; \r\nimport './Examen.css';\r\n\r\nfunction Examen() {\r\n  const { id } = useParams();\r\n  const [preguntas, setPreguntas] = useState([]);\r\n  const [respuestas, setRespuestas] = useState({});\r\n  const [curso, setCurso] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchPreguntas();\r\n    fetchCurso();\r\n  }, [id]);\r\n\r\n  const fetchPreguntas = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/examen.php?cursoId=${id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener las preguntas del examen');\r\n      }\r\n      const data = await response.json();\r\n      setPreguntas(data.preguntas || []);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching exam questions:', error);\r\n      setError('Error al cargar las preguntas del examen');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCurso = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/courses.php?id=${id}`);\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener los detalles del curso');\r\n      }\r\n      const data = await response.json();\r\n      setCurso(data);\r\n    } catch (error) {\r\n      console.error('Error fetching course details:', error);\r\n      setError('Error al cargar los detalles del curso');\r\n    }\r\n  };\r\n\r\n  const handleOpcionChange = (preguntaId, opcionId) => {\r\n    setRespuestas({\r\n      ...respuestas,\r\n      [preguntaId]: opcionId + 1,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const usuarioId = localStorage.getItem('usuarioId');\r\n    \r\n    if (!usuarioId) {\r\n      console.error('Usuario no identificado');\r\n      return;\r\n    }\r\n  \r\n    const data = {\r\n      cursoId: id,\r\n      usuarioId,\r\n      respuestas,\r\n      fecha: new Date().toISOString(),\r\n    };\r\n  \r\n    console.log('Datos enviados al backend:', data);\r\n  \r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/evaluarExamen.php`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        navigate(`/evaluacion/${result.evaluacionId}?nombreCurso=${encodeURIComponent(curso.nombre)}&especialidad=${encodeURIComponent(curso.especialidad)}`);\r\n      } else {\r\n        console.error('Error en la evaluación del examen');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error en el envío del examen:', error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Cargando...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (!preguntas || preguntas.length === 0) {\r\n    return <p>No hay preguntas disponibles para este examen.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"examen-container\">\r\n      <h2>Examen del Curso {curso && curso.nombre}</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {preguntas.map((pregunta, indexPregunta) => (\r\n          <div key={indexPregunta} className=\"pregunta\">\r\n            <h3>{pregunta.pregunta}</h3>\r\n            <div className=\"opciones\">\r\n              {pregunta.opciones.map((opcion, indexOpcion) => (\r\n                <div key={indexOpcion}>\r\n                  <label>\r\n                    {opcion}\r\n                    <br />\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`pregunta-${indexPregunta}`}\r\n                      value={indexOpcion + 1}\r\n                      checked={respuestas[pregunta.id] === indexOpcion + 1}\r\n                      onChange={() => handleOpcionChange(pregunta.id, indexOpcion)}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={handleSubmit} className=\"submit-examen-button\">\r\n          Enviar Examen\r\n        </button>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Examen;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}