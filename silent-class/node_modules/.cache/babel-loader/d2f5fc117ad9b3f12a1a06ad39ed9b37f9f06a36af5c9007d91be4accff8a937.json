{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import'./Courses.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Courses(){const[courses,setCourses]=useState([]);const[loading,setLoading]=useState(true);const[sessionActive,setSessionActive]=useState(false);// Estado para la sesión activa o no\nconst[validUser,setValidUser]=useState(false);// Estado para verificar si es Docente o Estudiante\nconst navigate=useNavigate();// Obtener el token o usuarioId y el tipo de usuario desde el localStorage\nconst usuarioId=localStorage.getItem('usuarioId');const tipoUsuario=localStorage.getItem('tipoUsuario');// Obtenemos el tipo de usuario\nuseEffect(()=>{// Verificar si el usuario tiene una sesión iniciada\nif(!usuarioId){setSessionActive(false);// No hay sesión activa\nsetLoading(false);// Dejar de cargar porque no se necesitan datos\n}else{setSessionActive(true);// Hay sesión activa\nif(tipoUsuario==='Docente'||tipoUsuario==='Estudiante'){setValidUser(true);// Usuario válido\nfetchCourses();// Cargar los cursos si es Docente o Estudiante\n}else{setValidUser(false);// No es un usuario válido\nsetLoading(false);}}},[usuarioId,tipoUsuario]);const fetchCourses=async()=>{try{const response=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/api/mostrarCursos.php\"));// Asegúrate de que el endpoint está correcto\nif(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setCourses(data);setLoading(false);// Dejar de cargar cuando los datos se obtienen\n}catch(error){console.error('Error fetching courses:',error);setLoading(false);// Dejar de cargar si hay un error\n}};const handleCreateCourse=()=>{navigate('/crearcurso');};const handleCourseClick=id=>{navigate(\"/curso/\".concat(id));// Redirigir a la vista de detalles del curso\n};// Nueva función para manejar la edición del curso\nconst handleEditCourse=id=>{navigate(\"/editar-curso/\".concat(id));// Redirigir a la página de edición del curso\n};if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Cargando...\"});// Mostrar mientras se cargan los datos\n}// Si no hay sesión activa, mostrar el mensaje de \"Usuario no identificado\"\nif(!sessionActive){return/*#__PURE__*/_jsx(\"p\",{children:\"Usuario no identificado, debes iniciar sesi\\xF3n\"});}// Si el tipo de usuario no es válido, no mostrar nada\nif(!validUser){return null;// No renderizar nada si no es Docente o Estudiante\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"courses-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cursos\"}),tipoUsuario==='Docente'&&/*#__PURE__*/_jsx(\"button\",{className:\"create-course-button\",onClick:handleCreateCourse,children:\"Crear Curso\"}),/*#__PURE__*/_jsx(\"div\",{className:\"courses-list\",children:courses.length>0?courses.map(course=>/*#__PURE__*/_jsxs(\"div\",{className:\"course-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:course.nombre}),/*#__PURE__*/_jsx(\"p\",{children:course.descripcion}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Instructor:\"}),\" \",course.instructor]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Especialidad:\"}),\" \",course.especialidad]}),tipoUsuario==='Docente'&&/*#__PURE__*/_jsx(\"button\",{className:\"edit-course-button\",onClick:()=>handleEditCourse(course.id),children:\"Editar Curso\"}),/*#__PURE__*/_jsx(\"button\",{className:\"view-course-button\",onClick:()=>handleCourseClick(course.id),children:\"Ver Curso\"})]},course.id)):/*#__PURE__*/_jsx(\"p\",{children:\"No hay cursos disponibles.\"})})]});}export default Courses;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Courses","courses","setCourses","loading","setLoading","sessionActive","setSessionActive","validUser","setValidUser","navigate","usuarioId","localStorage","getItem","tipoUsuario","fetchCourses","response","fetch","concat","process","env","REACT_APP_API_URL","ok","Error","data","json","error","console","handleCreateCourse","handleCourseClick","id","handleEditCourse","children","className","onClick","length","map","course","nombre","descripcion","instructor","especialidad"],"sources":["C:/Users/HP/Desktop/Proyecto_Alexandro/Version hibrida (local-web)/silent-class/src/components/Courses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Courses.css';\r\n\r\nfunction Courses() {\r\n  const [courses, setCourses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sessionActive, setSessionActive] = useState(false); // Estado para la sesión activa o no\r\n  const [validUser, setValidUser] = useState(false); // Estado para verificar si es Docente o Estudiante\r\n  const navigate = useNavigate();\r\n\r\n  // Obtener el token o usuarioId y el tipo de usuario desde el localStorage\r\n  const usuarioId = localStorage.getItem('usuarioId');\r\n  const tipoUsuario = localStorage.getItem('tipoUsuario'); // Obtenemos el tipo de usuario\r\n\r\n  useEffect(() => {\r\n    // Verificar si el usuario tiene una sesión iniciada\r\n    if (!usuarioId) {\r\n      setSessionActive(false); // No hay sesión activa\r\n      setLoading(false); // Dejar de cargar porque no se necesitan datos\r\n    } else {\r\n      setSessionActive(true); // Hay sesión activa\r\n      if (tipoUsuario === 'Docente' || tipoUsuario === 'Estudiante') {\r\n        setValidUser(true); // Usuario válido\r\n        fetchCourses(); // Cargar los cursos si es Docente o Estudiante\r\n      } else {\r\n        setValidUser(false); // No es un usuario válido\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }, [usuarioId, tipoUsuario]);\r\n\r\n  const fetchCourses = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/mostrarCursos.php`); // Asegúrate de que el endpoint está correcto\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setCourses(data);\r\n      setLoading(false); // Dejar de cargar cuando los datos se obtienen\r\n    } catch (error) {\r\n      console.error('Error fetching courses:', error);\r\n      setLoading(false); // Dejar de cargar si hay un error\r\n    }\r\n  };\r\n\r\n  const handleCreateCourse = () => {\r\n    navigate('/crearcurso');\r\n  };\r\n\r\n  const handleCourseClick = (id) => {\r\n    navigate(`/curso/${id}`); // Redirigir a la vista de detalles del curso\r\n  };\r\n\r\n  // Nueva función para manejar la edición del curso\r\n  const handleEditCourse = (id) => {\r\n    navigate(`/editar-curso/${id}`); // Redirigir a la página de edición del curso\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Cargando...</p>; // Mostrar mientras se cargan los datos\r\n  }\r\n\r\n  // Si no hay sesión activa, mostrar el mensaje de \"Usuario no identificado\"\r\n  if (!sessionActive) {\r\n    return <p>Usuario no identificado, debes iniciar sesión</p>;\r\n  }\r\n\r\n  // Si el tipo de usuario no es válido, no mostrar nada\r\n  if (!validUser) {\r\n    return null; // No renderizar nada si no es Docente o Estudiante\r\n  }\r\n\r\n  return (\r\n    <div className=\"courses-container\">\r\n      <h2>Cursos</h2>\r\n\r\n      {/* Mostrar el botón de \"Crear Curso\" solo si el tipo de usuario es \"Docente\" */}\r\n      {tipoUsuario === 'Docente' && (\r\n        <button className=\"create-course-button\" onClick={handleCreateCourse}>\r\n          Crear Curso\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"courses-list\">\r\n        {courses.length > 0 ? (\r\n          courses.map(course => (\r\n            <div \r\n              key={course.id} \r\n              className=\"course-card\"\r\n            >\r\n              <h3>{course.nombre}</h3>\r\n              <p>{course.descripcion}</p>\r\n              <p><strong>Instructor:</strong> {course.instructor}</p>\r\n              <p><strong>Especialidad:</strong> {course.especialidad}</p>\r\n\r\n              {/* Si el usuario es docente, mostrar el botón \"Editar Curso\" */}\r\n              {tipoUsuario === 'Docente' && (\r\n                <button className=\"edit-course-button\" onClick={() => handleEditCourse(course.id)}>\r\n                  Editar Curso\r\n                </button>\r\n              )}\r\n\r\n              {/* Hacer clic en cualquier parte de la tarjeta llevará al detalle del curso */}\r\n              <button className=\"view-course-button\" onClick={() => handleCourseClick(course.id)}>\r\n                Ver Curso\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No hay cursos disponibles.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Courses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}