{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Nueva carpeta (2)\\\\Aplicativo\\\\silent-class\\\\src\\\\components\\\\Courses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Courses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Courses() {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [sessionActive, setSessionActive] = useState(false); // Estado para la sesión activa o no\n  const [validUser, setValidUser] = useState(false); // Estado para verificar si es Docente o Estudiante\n  const navigate = useNavigate();\n\n  // Obtener el token o usuarioId y el tipo de usuario desde el localStorage\n  const usuarioId = localStorage.getItem('usuarioId');\n  const tipoUsuario = localStorage.getItem('tipoUsuario'); // Obtenemos el tipo de usuario\n\n  useEffect(() => {\n    // Verificar si el usuario tiene una sesión iniciada\n    if (!usuarioId) {\n      setSessionActive(false); // No hay sesión activa\n      setLoading(false); // Dejar de cargar porque no se necesitan datos\n    } else {\n      setSessionActive(true); // Hay sesión activa\n      if (tipoUsuario === 'Docente' || tipoUsuario === 'Estudiante') {\n        setValidUser(true); // Usuario válido\n        fetchCourses(); // Cargar los cursos si es Docente o Estudiante\n      } else {\n        setValidUser(false); // No es un usuario válido\n        setLoading(false);\n      }\n    }\n  }, [usuarioId, tipoUsuario]);\n  const fetchCourses = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/courses'); // Asegúrate de que el endpoint está correcto\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setCourses(data);\n      setLoading(false); // Dejar de cargar cuando los datos se obtienen\n    } catch (error) {\n      console.error('Error fetching courses:', error);\n      setLoading(false); // Dejar de cargar si hay un error\n    }\n  };\n  const handleCreateCourse = () => {\n    navigate('/crearcurso');\n  };\n  const handleCourseClick = id => {\n    navigate(`/curso/${id}`); // Redirigir a la vista de detalles del curso\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this); // Mostrar mientras se cargan los datos\n  }\n\n  // Si no hay sesión activa, mostrar el mensaje de \"Usuario no identificado\"\n  if (!sessionActive) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Usuario no identificado, debes iniciar sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si el tipo de usuario no es válido, no mostrar nada\n  if (!validUser) {\n    return null; // No renderizar nada si no es Docente o Estudiante\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"courses-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cursos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), tipoUsuario === 'Docente' && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-course-button\",\n      onClick: handleCreateCourse,\n      children: \"Crear Curso\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"courses-list\",\n      children: courses.length > 0 ? courses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"course-card\",\n        onClick: () => handleCourseClick(course.id) // Redirigir al hacer clic en el curso\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: course.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: course.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Instructor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 18\n          }, this), \" \", course.instructor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Especialidad:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 18\n          }, this), \" \", course.especialidad]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, course.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay cursos disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Courses, \"cXTSJG9XSXd5Dxbm146pGkZXgTM=\", false, function () {\n  return [useNavigate];\n});\n_c = Courses;\nexport default Courses;\nvar _c;\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Courses","_s","courses","setCourses","loading","setLoading","sessionActive","setSessionActive","validUser","setValidUser","navigate","usuarioId","localStorage","getItem","tipoUsuario","fetchCourses","response","fetch","ok","Error","data","json","error","console","handleCreateCourse","handleCourseClick","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","course","nombre","descripcion","instructor","especialidad","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Nueva carpeta (2)/Aplicativo/silent-class/src/components/Courses.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Courses.css';\r\n\r\nfunction Courses() {\r\n  const [courses, setCourses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sessionActive, setSessionActive] = useState(false); // Estado para la sesión activa o no\r\n  const [validUser, setValidUser] = useState(false); // Estado para verificar si es Docente o Estudiante\r\n  const navigate = useNavigate();\r\n\r\n  // Obtener el token o usuarioId y el tipo de usuario desde el localStorage\r\n  const usuarioId = localStorage.getItem('usuarioId');\r\n  const tipoUsuario = localStorage.getItem('tipoUsuario'); // Obtenemos el tipo de usuario\r\n\r\n  useEffect(() => {\r\n    // Verificar si el usuario tiene una sesión iniciada\r\n    if (!usuarioId) {\r\n      setSessionActive(false); // No hay sesión activa\r\n      setLoading(false); // Dejar de cargar porque no se necesitan datos\r\n    } else {\r\n      setSessionActive(true); // Hay sesión activa\r\n      if (tipoUsuario === 'Docente' || tipoUsuario === 'Estudiante') {\r\n        setValidUser(true); // Usuario válido\r\n        fetchCourses(); // Cargar los cursos si es Docente o Estudiante\r\n      } else {\r\n        setValidUser(false); // No es un usuario válido\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }, [usuarioId, tipoUsuario]);\r\n\r\n  const fetchCourses = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/courses'); // Asegúrate de que el endpoint está correcto\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setCourses(data);\r\n      setLoading(false); // Dejar de cargar cuando los datos se obtienen\r\n    } catch (error) {\r\n      console.error('Error fetching courses:', error);\r\n      setLoading(false); // Dejar de cargar si hay un error\r\n    }\r\n  };\r\n\r\n  const handleCreateCourse = () => {\r\n    navigate('/crearcurso');\r\n  };\r\n\r\n  const handleCourseClick = (id) => {\r\n    navigate(`/curso/${id}`); // Redirigir a la vista de detalles del curso\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Cargando...</p>; // Mostrar mientras se cargan los datos\r\n  }\r\n\r\n  // Si no hay sesión activa, mostrar el mensaje de \"Usuario no identificado\"\r\n  if (!sessionActive) {\r\n    return <p>Usuario no identificado, debes iniciar sesión</p>;\r\n  }\r\n\r\n  // Si el tipo de usuario no es válido, no mostrar nada\r\n  if (!validUser) {\r\n    return null; // No renderizar nada si no es Docente o Estudiante\r\n  }\r\n\r\n  return (\r\n    <div className=\"courses-container\">\r\n      <h2>Cursos</h2>\r\n\r\n      {/* Mostrar el botón de \"Crear Curso\" solo si el tipo de usuario es \"Docente\" */}\r\n      {tipoUsuario === 'Docente' && (\r\n        <button className=\"create-course-button\" onClick={handleCreateCourse}>\r\n          Crear Curso\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"courses-list\">\r\n        {courses.length > 0 ? (\r\n          courses.map(course => (\r\n            <div \r\n              key={course.id} \r\n              className=\"course-card\" \r\n              onClick={() => handleCourseClick(course.id)} // Redirigir al hacer clic en el curso\r\n            >\r\n              <h3>{course.nombre}</h3>\r\n              <p>{course.descripcion}</p>\r\n              <p><strong>Instructor:</strong> {course.instructor}</p>\r\n              <p><strong>Especialidad:</strong> {course.especialidad}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No hay cursos disponibles.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Courses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}